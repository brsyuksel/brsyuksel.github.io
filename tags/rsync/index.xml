<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
      <title>Rsync on barış yüksel </title>
      <generator uri="https://hugo.spf13.com">Hugo</generator>
    <link>http://brsyuksel.github.io/tags/rsync/index.xml/</link>
    <language>tr_TR</language>
    
    
    <updated>Fri, 01 Aug 2014 18:56:58 &#43;0200</updated>
    
    <item>
      <title>rsyncd, rsync daemon</title>
      <link>http://brsyuksel.github.io/post/rsync/</link>
      <pubDate>Fri, 01 Aug 2014 18:56:58 &#43;0200</pubDate>
      
      <guid>http://brsyuksel.github.io/post/rsync/</guid>
      <description>&lt;p&gt;rsync, dosya transferinden zaman kazandıracak güzel yeteneklere sahip popüler bir uygulama. local ve uzak bilgisayar üzerinde dosya transferi yapabilmenizi sağlayan rsync&amp;rsquo;in en dikkat çekici özelliği sadece değişiklikleri transfer ederek transfer noktaları arasındaki senkronizasyonu sağlamasıdır. bunun yanında diğer bir özellik olarak da linkler, soketler, device&amp;rsquo;lar, dosya sahipliği ve izinlerin kopyalanmasını destekler. rsync mirroring için en ideal yazılımdır. daha fazlası için &lt;a href=&#34;http://en.wikipedia.org/wiki/Rsync&#34; title=&#34;wikipedia-rsync&#34;&gt;burdan&lt;/a&gt; devam edin.&lt;/p&gt;

&lt;p&gt;rsync ile genelde uzak bilgisayarlar arasında ssh üzerinden bağlantı sağlanıyor. yerine göre doğru bir tercih olsa da local&amp;rsquo;de yer alan sanal makinelerde rsync&amp;rsquo;i daemon olarak kullanmak daha verimli olabilir. basit bir yapılandırma ile rsync&amp;rsquo;i daemon olarak başlatabilirsiniz.&lt;/p&gt;

&lt;p&gt;server tarafında ilk işimiz &lt;code&gt;/etc/rsyncd.conf&lt;/code&gt; dosyası ile. bu dosyada rsync daemon&amp;rsquo;u için belirli tanımlamaları yapıp sonra rsnyc&amp;rsquo;in dökümanında yer alan tabirle modüller halinde hedef klasörlerimizi tanımlayacağız.&lt;/p&gt;

&lt;p&gt;motd file=/path/to/motdfile.txt
  pid file=/var/run/rsyncd.pid&lt;/p&gt;

&lt;p&gt;[project1]
    comment=project1 rsync dir
    path=/path/to/project1
    use chroot=true
    read only=false
    log file=/path/to/logs/project1.log
    uid=0
    gid=0
    filter=&lt;em&gt;.pyc tmp/
    exclude=&lt;/em&gt;.swp
    auth users=kullanici
    secrets file=/etc/rsyncd.secrets&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;motd file&lt;/strong&gt;, login, sshd vs den de tanıdık gelecektir, &amp;ldquo;message of the day&amp;rdquo; dosyası. rsync ile bağlantı sonrasında kullanıcıya göstermek istediğiniz mesajı bir dosyaya kaydedip bu değişken ile belirtiyorsunuz.
&lt;strong&gt;pid file&lt;/strong&gt;, rsync daemon&amp;rsquo;u için pid dosyası.&lt;/p&gt;

&lt;p&gt;bu noktadan sonra modül tanımlarına geçiyoruz. ancak daha fazla global tanımlar için &lt;code&gt;man rsyncd.conf&lt;/code&gt; komutu ile man sayfasından bilgi alabilirsiniz.&lt;/p&gt;

&lt;p&gt;rsync daemon&amp;rsquo;u için modüller fark ettiğiniz gibi &lt;em&gt;[]&lt;/em&gt; içinde tanımlanıyor. bu modüllerin kendi içerisinde belirli tanımları içermesi gerekiyor ve rsync komutu ile dosya transferi sağlanırken, sunucu üzerindeki realpath&amp;rsquo;i değil, modül ismini uri&amp;rsquo;de path bilgisi olarak vermeniz gerekiyor.&lt;/p&gt;

&lt;p&gt;örnek modüldeki tanımlara bakalım.
&lt;strong&gt;comment&lt;/strong&gt;, modül hakkında bilgi. rsync ile list yaptığınız anda kullanıcıya gösteriliyor.
&lt;strong&gt;path&lt;/strong&gt;, senkronizasyon yapılacak klasör yolu.
&lt;strong&gt;use chroot&lt;/strong&gt;, dosya transferi başlamadan önce rsnyc daemonunun klasör içerisinde chroot olmasını sağlar.
&lt;strong&gt;read only&lt;/strong&gt;, default olarak true değerini alan bu parametre dosyaları &lt;strong&gt;yazılamaz&lt;/strong&gt; yapar, klasör sadece download&amp;rsquo;a açıktır.
&lt;strong&gt;log file&lt;/strong&gt;, dosya transferi log dosyası yolu.
&lt;strong&gt;uid, gid&lt;/strong&gt;, dosya transfer işlemi gerçekleştikten sonra sahipliği bu user-group olacak şekilde bu id&amp;rsquo;li kullanıcıya teslim edilir.
&lt;strong&gt;filter&lt;/strong&gt;, bu tanım ile belirlediğiniz klasör ve türdeki dosyaları download&amp;rsquo;a kapatabiliyorsunuz.
&lt;strong&gt;exclude&lt;/strong&gt;, filter gibi bu tanımla da upload anında belirlediğiniz dosyaların yüklenmesini engelleyebiliyorsunuz.
&lt;strong&gt;auth users&lt;/strong&gt;, bu modül için erişim haklarına sahip kullanıcılar.
&lt;strong&gt;secrets file&lt;/strong&gt;, kullanıcıların username:password bilgisinin yer aldığı dosya.&lt;/p&gt;

&lt;p&gt;yine daha fazla bilgi için &lt;code&gt;man rsyncd.conf&lt;/code&gt; ile man sayfasına göz atın.&lt;/p&gt;

&lt;p&gt;şimdi &lt;em&gt;kullanici&lt;/em&gt; isimli kullanıcımızı &lt;code&gt;/etc/rsyncd.secrets&lt;/code&gt; dosyasına eklememiz gerekiyor. bu dosyada kullanıcı ve şifre bilgisi &lt;strong&gt;:&lt;/strong&gt; ile kolonlara ayrılmış olup, her kullanıcı bilgisi alt alta plain text olarak yazılıyor.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;/etc/rsyncd.secrets&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;kullanici:123456SFR
  baris:sifreSFR&lt;/p&gt;

&lt;p&gt;tanımlamaları yapıktan sonra sıradaki iş rsync&amp;rsquo;i daemon olarak başlatmakta. ilk önce &lt;code&gt;/etc/services&lt;/code&gt; dosyasında rsync port ve protokol tanımının yapılıp yapılmadığını kontrol ediyoruz. yapılmamışsa aşağıdaki örnek çıktıyı bu dosyaya ekleyebilirsiniz.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cat /etc/services | grep rsync
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;rsync   873/tcp
  rsync   873/udp&lt;/p&gt;

&lt;p&gt;bu noktada önemli, internet daemon&amp;rsquo;ları bazı dağıtımlarda inet daemon&amp;rsquo;u tarafından yönetilirken bazı dağıtımlarda inetd&amp;rsquo;nin yerine gelen xinetd tarafından yönetiliyor. slackware inetd ile çalıştığından ben inetd yapılandırma dosyası hakkında bilgi verebileceğim.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;/etc/inetd.conf&lt;/code&gt; yapılan eklemeler belirli bir formatta oluyor, rsync daemonu için yapacağımız ekleme şu şekilde:&lt;/p&gt;

&lt;p&gt;rsync   stream  tcp     nowait  root   /usr/bin/rsync rsyncd &amp;ndash;daemon&lt;/p&gt;

&lt;p&gt;bu eklemeyi yapıp kaydettikten sonra inetd&amp;rsquo;ye HUP sinyali gönderip .conf dosyasını yeniden okumasını sağlıyoruz.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;kill -HUP `pidof inetd`
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;bu aşamadan sonra rsync üzerinden bağlantı gerçekleştirebilirsiniz.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;rsync -rtvh rsync://kullanici@server.ip/project1 lokal/hedef/klasor
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
  </channel>
</rss>