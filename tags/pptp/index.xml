<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
      <title>Pptp on barış yüksel </title>
      <generator uri="https://hugo.spf13.com">Hugo</generator>
    <link>http://brsyuksel.github.io/tags/pptp/index.xml/</link>
    <language>tr_TR</language>
    
    
    <updated>Fri, 01 Aug 2014 18:54:19 &#43;0200</updated>
    
    <item>
      <title>pptpd ile pptp vpn server kurulumu</title>
      <link>http://brsyuksel.github.io/post/pptp/</link>
      <pubDate>Fri, 01 Aug 2014 18:54:19 &#43;0200</pubDate>
      
      <guid>http://brsyuksel.github.io/post/pptp/</guid>
      <description>

&lt;p&gt;dns çözümlerinin yetersiz kaldığı anlarda(!) vpn çözümlerine başvuruyoruz. bu dökümanda düşük bir maliyetle edinebileceğiniz vps&amp;rsquo;inizi nasıl size özel bir pptp vpn-server&amp;rsquo;a çevirebileceğinizi anlatmaya çalışacağım. ücretsiz vpn hizmetlerinin yetersiz kaldığı anlarda(!) hızlı bir çözüm olacaktır. server kurulumu fedora 19, client fedora 20 olsa da bir çok dağıtım için yapılandırma benzer olacaktır.&lt;/p&gt;

&lt;p&gt;başlamadan bahsedeyim alternatif olarak openVPN gibi çözümler mevcut ancak kaynak kullanımı, hız-performans gibi konulardan ötürü ben pptp&amp;rsquo;yi tercih ettim. yine de farklı yetenekli olan openVPN&amp;rsquo;i deneyebilirsiniz.&lt;/p&gt;

&lt;h1 id=&#34;toc_0&#34;&gt;server&lt;/h1&gt;

&lt;p&gt;pptpd paketini kurun.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;yum install pptpd
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;ilk olarak pptpd ayarlarında bir kaç değişiklik yapmanız gerekiyor. &lt;code&gt;/etc/pptpd.conf&lt;/code&gt; dosyasında şu düzenlemeleri yapın.&lt;/p&gt;

&lt;p&gt;#logwtmp
  localip 10.0.0.1
  remoteip 10.0.0.100-200&lt;/p&gt;

&lt;p&gt;logwtmp satırını disable ederek connection loglarının tutulmasını kapatmış bulunuyoruz. daha fazla yapılandırma bilgisi için &lt;code&gt;man pptpd.conf&lt;/code&gt; yazarak bilgi alabilirsiniz.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;/etc/ppp/options.pptpd&lt;/code&gt; dosyasında yine bir kaç satırlık düzenleme yapmanız gerekiyor. client&amp;rsquo;ların dns hizmeti için hangi sağlayıcının kullanılacabını belirleyin. ben alttaki örnekte google dns(!) kullandım.&lt;/p&gt;

&lt;p&gt;ms-dns 8.8.8.8
  ms-dns 8.8.4.4&lt;/p&gt;

&lt;p&gt;&lt;code&gt;/etc/ppp/chap-secrets&lt;/code&gt; dosyasında uygun formatta vpn-server&amp;rsquo;ınızın kullanıcınılarını basit bir şekilde kullanıcı adı ve şifre olarak tanımlıyorsunuz.&lt;/p&gt;

&lt;p&gt;[USERNAME] pptpd [PASSWORD] *&lt;/p&gt;

&lt;p&gt;&lt;em&gt;[USERNAME]&lt;/em&gt; ve &lt;em&gt;[PASSWORD]&lt;/em&gt; alanlarını kendinize göre düzenleyin. eklemek istediğiniz kullanıcı varsa aynı dosyaya aynı formatta eklemeye devam edebilirsiniz.&lt;/p&gt;

&lt;p&gt;şimdi ip forwarding&amp;rsquo;i açmamız gerekiyor. geçici olarak açmak istediğiniz taktirde şu komutu kullanabilirsiniz:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sysctl net.ipv4.ip_forward=1
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;ancak olası bir reboot sonrası bu ayar default değer olan 0 değerini alacağından kalıcı olması için &lt;code&gt;/etc/sysctl.d/99-ip_forward.conf&lt;/code&gt; dosyasını oluşturup aynı komutu dosyaya girdi olarak bırakıyoruz&lt;/p&gt;

&lt;p&gt;net.ipv4.ip_forward=1&lt;/p&gt;

&lt;p&gt;ayarların uygulanması için tekrar sysctl&amp;rsquo;den yararlanıyoruz. aşağıdaki komut yardımcı olacaktır.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sysctl --system
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;bu noktadan sonra iptables&amp;rsquo;a bazı eklemeleri yapmamız gerekiyor. bunlar şu şekilde:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;iptables -t nat -A POSTROUTING -o eth0 -j MASQUERADE
iptables --table nat --append POSTROUTING --out-interface ppp0 -j MASQUERADE
iptables -I INPUT -s 10.0.0.0/8 -i ppp0 -j ACCEPT
iptables --append FORWARD --in-interface eth0 -j ACCEPT
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;iptables girdileri yine reboot sonrası kalıcı olmayacağından girdileri &lt;code&gt;/etc/iptables/iptables.rules&lt;/code&gt; dosyasına kaydetmek kalıcılık sağlayacaktır. aşağıdaki komut aradığınız çözüm.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;iptables-save &amp;gt; /etc/iptables/iptables.rules
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;server yapılandırmasında sona geldik. şimdi iptables servisini yeniden başlatıp ve pptpd servisini başlatıp reboot sonrası otomatik başlatma için ayarlayın.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;systemctl restart iptables.service
systemctl start pptpd.service
systemctl enable pptpd.service
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;toc_1&#34;&gt;client&lt;/h1&gt;

&lt;p&gt;bu adımda client&amp;rsquo;ımızı yapılandırıp vpn-server&amp;rsquo;ımıza bağlanacağız.&lt;/p&gt;

&lt;p&gt;client&amp;rsquo;da pptp paketine ihtiyaç duyuyoruz. pptp paketini yükleyin.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;yum install pptp
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;bağlanacağımız vpn-server&amp;rsquo;ları &lt;code&gt;/etc/ppp/peers/&lt;/code&gt; klasörü altında belirli bir formatta tanımlıyoruz. bu noktada kullanacağınız vpn-server&amp;rsquo;ı tanımladığınız dosya adı önemli çünkü ilerde bağlantı sağlanırken kullanılan komutta bu dosya adını parametre olarak vereceğiz.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;/etc/ppp/peers/ozelvpn&lt;/code&gt; dosyası şu şekilde olabilir.&lt;/p&gt;

&lt;p&gt;pty &amp;ldquo;pptp [SERVERIP] &amp;ndash;nolaunchpppd&amp;rdquo;
  name [USERNAME]
  password [PASSWORD]
  remotename PPTP
  require-mppe-128&lt;/p&gt;

&lt;p&gt;örnekteki &lt;em&gt;[SERVERIP]&lt;/em&gt; yerine VPS&amp;rsquo;inizin IP adresini yazmalısınız. &lt;em&gt;[USERNAME]&lt;/em&gt; ve &lt;em&gt;[PASSWORD]&lt;/em&gt; alanlarına server&amp;rsquo;da &lt;code&gt;/etc/ppp/chap-secrets&lt;/code&gt; dosyasında tanımladığınız uygun kullanıcının bilgilerini girmeniz gerekiyor.&lt;/p&gt;

&lt;p&gt;şimdi vpn-serverımızla bağlantıyı sağlayalım.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;pppd call ozelvpn
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;bu komutu çalıştırdıktan sonra &lt;strong&gt;ozelvpn&lt;/strong&gt; olarak tanımladığınız vpn&amp;rsquo;inize bağlanmış olacaksınız ancak tunnelling hala gerçekleşmiyor. vpn ile olan bağlantınızı kontrol etmek için aşağıdaki komutu kullanabilirsiniz.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;tail -f /var/log/messages
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;tunnelling&amp;rsquo;i gerçekleştirmek için bir route işlemine ihtiyaç duyuyor olacaksınız. bu işlemi de şu şekilde gerçekleştirip son adımı tamamlamış olacaksınız ve artık packet&amp;rsquo;ler vpn üzerinden dolaşacak. ip adres kontrolü sağlayan sitelerden ip adresinizi &lt;a href=&#34;http://ipadresimnedir.org&#34; title=&#34;ipadresimnedir.org&#34;&gt;ipadresimnedir.org&lt;/a&gt; sitesinden ya da hiç vakit kaybetmeden özgürlüğünüzü, 21.yy dünyasında demoktratik haklarınızın engellenip engellenmediğini(!) kontrol edebilirsiniz.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;route add default dev ppp0
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;route işlemi de kalıcı değildir. pppd call işleminden sonra otomatik olarak yapılmasını istiyorsanız &lt;code&gt;/etc/ppp/ip-up.local&lt;/code&gt; dosyasını oluşturup şu girdiyi bırakın:&lt;/p&gt;

&lt;p&gt;#!/bin/bash
  route add default dev ppp0&lt;/p&gt;

&lt;p&gt;daha sonra dosyayı executable yapın.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;chmod +x /etc/ppp/ip-up.local
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;bu işlemden sonra her &lt;code&gt;pppd call ozelvpn&lt;/code&gt; komutundan sonra route işlemi gerçekleştirilmiş olacak.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>slackware pppd ve updown scripti</title>
      <link>http://brsyuksel.github.io/post/updown/</link>
      <pubDate>Sun, 01 Jun 2014 19:09:38 &#43;0200</pubDate>
      
      <guid>http://brsyuksel.github.io/post/updown/</guid>
      <description>&lt;p&gt;slackware&amp;rsquo;da pptp-client uygulamasını yükledikten sonra, uygulamanın fedora&amp;rsquo;daki gibi route tablosunu tunnelling&amp;rsquo;i sağlayacak şekilde düzenlemediğini fark ettim. açıkcası bu sorun sürüm farklılığından mı, script/conf eksikliğinden mi ya da başka bir sebepten mi kaynaklanıyor araştırmadım, pppd&amp;rsquo;nin script&amp;rsquo;lerini kullanarak çözüme gitmek yeterince vakit kazandırdı.&lt;/p&gt;

&lt;p&gt;pptp sağlayıcısı ile bağlantı sağlandıktan sonra, default route girişini her seferinde elle girmek yerine &lt;strong&gt;/etc/ppp&lt;/strong&gt; klasörü altında executable bir &lt;strong&gt;ip-up&lt;/strong&gt; scripti oluşturup otomatik olarak çalışmasını sağlayabiliyorsunuz. slackware altında nedense &lt;strong&gt;host target route&lt;/strong&gt; girişi otomatik olarak yapılmıyor, bu script ile bu sorunu aşabilirsiniz. ancak &lt;strong&gt;birden çok&lt;/strong&gt; sağlayıcı kullanıyorsanız, bu script&amp;rsquo;in farklı sağlayıcılar için otomatik olarak çalıştırılması anlamsız bir hale geliyor. sağlayıcının kendi ip adresini &lt;strong&gt;host target&lt;/strong&gt; olarak route tablosuna eklemezseniz, başarısız bir sonuç alırsınız.&lt;/p&gt;

&lt;p&gt;bu soruna çözüm olması için &lt;strong&gt;updown&lt;/strong&gt; adını verdiğim basit bir script oluşturdum. pppd&amp;rsquo;nin bir özelliği olan ipparam&amp;rsquo;dan yararlandım. peer dosyasında tanımladığınız &lt;strong&gt;ipparam&lt;/strong&gt; değeri, bağlantı durumlarında &lt;strong&gt;ip-up&lt;/strong&gt; ve &lt;strong&gt;ip-down&lt;/strong&gt; script&amp;rsquo;lerine &lt;strong&gt;parametre&lt;/strong&gt; olarak iletiliyor. updown, bu parametreye uygun olarak düzenlenmiş script&amp;rsquo;i çalıştırarak bağlantı sonrası yapılması gereken rutinleri, kolay yönetilebilir hale getiriyor.&lt;/p&gt;

&lt;p&gt;vpnbook serverlarını için peer dosyaları oluşturup updown&amp;rsquo;ın kullanımını özetleyeyim.&lt;/p&gt;

&lt;p&gt;öncelikle updown script&amp;rsquo;ini &lt;strong&gt;/etc/ppp&lt;/strong&gt; klasörü altına indirin:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cd /etc/ppp; wget https://raw.githubusercontent.com/brsyuksel/pppd-updown/master/updown &amp;amp;&amp;amp; chmod +x updown
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;/etc/ppp&lt;/strong&gt; altında &lt;strong&gt;ip-up&lt;/strong&gt; ve &lt;strong&gt;ip-down&lt;/strong&gt; scriptleriniz varsa, yedekledikten sonra silin.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;/etc/ppp/updown link
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;komutunu vererek, updown&amp;rsquo;ın ip-up ve ip-down adında &lt;strong&gt;kendisine linklenmiş symbolic linkler&lt;/strong&gt; oluşturmasını sağlayın.&lt;/p&gt;

&lt;p&gt;vpnbook us serveri için &lt;code&gt;/etc/ppp/peers&lt;/code&gt; klasörü altında vpnbookus dosyasını oluşturun ve şu şekilde düzenleyin:&lt;/p&gt;

&lt;p&gt;pty &amp;ldquo;pptp us1.vpnbook.com &amp;ndash;nolaunchpppd&amp;rdquo;
  name vpnbook
  password GUNCELVPNBOOKSIFRESI
  remotename PPTP
  require-mppe-128
  lock
  nobsdcomp
  nodeflate
  ipparam vpnbookus&lt;/p&gt;

&lt;p&gt;bu noktada &lt;strong&gt;ipparam vpnbookus&lt;/strong&gt; önemli. updown ile bu parametre için basit bir script oluşturup rutinlerin yönetilmesini sağlayacağız.&lt;/p&gt;

&lt;p&gt;updown ile vpnbookus parametresi için manager script&amp;rsquo;i oluşturalım. bu komutla template script&amp;rsquo;i oluşturabilirsiniz:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;/etc/ppp/updown template vpnbookus
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;bu komutu verdikten sonra updown.vpnbookus adında basit bir script editörünüzde açılacak ve düzenlemeniz istenecek. bağlantı sağlandığı zaman bu script içerisinden start fonksiyonu, bağlantı kapandığında ise stop fonksiyonu çalıştırılıyor. durumlara göre route işlemlerini ve rutinleri yapmalısınız. vpnbook us server&amp;rsquo;ı için şu şekilde düzenleyin ( &lt;strong&gt;device interface, gateway gibi parametreleri kendinize göre düzenlemeyi unutmayın&lt;/strong&gt; ) :&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;start(){
# us1.vpnbook.com ip addr: 198.7.62.204

# tunnelling icin gerekli route tablosu.
/sbin/route add -host 198.7.62.204 gw 192.168.1.1 dev wlan0
/sbin/route add default dev ppp0
/sbin/route del default dev wlan0

# nameserver gibi rutinler vs.
cat &amp;lt;&amp;lt; EOF &amp;gt; /etc/resolv.conf
nameserver 8.8.8.8
nameserver 8.8.4.4
EOF

}

stop(){
/sbin/route del -host 198.7.62.204 dev wlan0
/sbin/route add default gw 192.168.1.1 dev wlan0
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;ve artık bağlantınızı sağlayabilirsiniz: &lt;code&gt;pppd call vpnbookus&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;bu noktadan sonra yine örnek olarak vpnbook eu serverları için aynı yolu izleyerek configuration&amp;rsquo;ları tamamlayıp ve geçerli bağlantıyı kapattıktan sonra diğer bir server&amp;rsquo;a bağlantıyı &lt;code&gt;pppd call PEERDOSYASIADI&lt;/code&gt; komutuyla kolayca sağlayabilirsiniz.&lt;/p&gt;

&lt;p&gt;updown gibi basit bir script için fazlasıyla uzunca bir döküman oldu sanırım :)&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>